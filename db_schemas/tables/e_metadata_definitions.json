[
    {
        "id": 1,
        "reference": "label",
        "name": "label",
        "type": "String",
        "scope": "field",
        "default_value": null,
        "groupe": "general",
        "description": "Texte visible associé à cet attribut dans une interface utilisateur",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 2,
        "reference": "description",
        "name": "description",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "general",
        "description": "Une explication détaillée ou un contexte pour cet attribut",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 3,
        "reference": "placeholder",
        "name": "placeholder",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "general",
        "description": "Texte d'indication affiché lorsque l'attribut est vide",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 4,
        "reference": "readOnly",
        "name": "readOnly",
        "type": "Boolean",
        "scope": "field",
        "default_value": "false",
        "groupe": "general",
        "description": "Indique si l'attribut est modifiable ou en lecture seule",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 5,
        "reference": "hidden",
        "name": "hidden",
        "type": "Boolean",
        "scope": "field",
        "default_value": "false",
        "groupe": "general",
        "description": "Indique si l'attribut doit être masqué dans l'interface utilisateur",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 6,
        "reference": "defaultValue",
        "name": "defaultValue",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "general",
        "description": "Valeur par défaut de l'attribut",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 7,
        "reference": "required",
        "name": "required",
        "type": "Boolean",
        "scope": "field",
        "default_value": "false",
        "groupe": "general",
        "description": "Spécifie si l'attribut est obligatoire",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 8,
        "reference": "tooltip",
        "name": "tooltip",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "general",
        "description": "Texte d'aide affiché en survol de l'attribut",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 9,
        "reference": "toString",
        "name": "toString",
        "type": "Boolean",
        "scope": "field",
        "default_value": "false",
        "groupe": "general",
        "description": "Indique si cet attribut doit être inclus dans la méthode ToString",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 10,
        "reference": "displayField",
        "name": "displayField",
        "type": "Boolean",
        "scope": "field",
        "default_value": "false",
        "groupe": "general",
        "description": "Indique si le champ doit être utilisé comme clé d'affichage",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 11,
        "reference": "enum",
        "name": "enum",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "general",
        "description": "Spécifie les options autorisées pour cet attribut",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 12,
        "reference": "inputType",
        "name": "inputType",
        "type": "String",
        "scope": "field",
        "default_value": "Icone",
        "groupe": "forms",
        "description": "Détermine de type de l'input : Image, Icone, Password, Couleur, ..",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 13,
        "reference": "validation",
        "name": "validation",
        "type": "Json",
        "scope": "field",
        "default_value": "",
        "groupe": "forms",
        "description": "Configuration des règles de validation pour cet attribut",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 14,
        "reference": "editor",
        "name": "editor",
        "type": "Json",
        "scope": "field",
        "default_value": "",
        "groupe": "forms",
        "description": "Configuration de l'éditeur incluant largeur et hauteur",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 15,
        "reference": "formatting",
        "name": "formatting",
        "type": "Json",
        "scope": "field",
        "default_value": "bold",
        "groupe": "forms",
        "description": "Options de mise en forme disponibles",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 16,
        "reference": "maxLength",
        "name": "maxLength",
        "type": "Integer",
        "scope": "field",
        "default_value": "",
        "groupe": "forms",
        "description": "Longueur maximale autorisée pour cet attribut",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 17,
        "reference": "minLength",
        "name": "minLength",
        "type": "Integer",
        "scope": "field",
        "default_value": "",
        "groupe": "forms",
        "description": "Longueur minimale requise pour cet attribut",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 18,
        "reference": "accept",
        "name": "accept",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "forms",
        "description": "Types de fichiers acceptés (pour les champs fichier)",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 19,
        "reference": "options",
        "name": "options",
        "type": "Json",
        "scope": "field",
        "default_value": "",
        "groupe": "forms",
        "description": "Liste des options possibles pour un champ de sélection",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 20,
        "reference": "multiSelect",
        "name": "multiSelect",
        "type": "Boolean",
        "scope": "field",
        "default_value": "false",
        "groupe": "forms",
        "description": "Indique si plusieurs options peuvent être sélectionnées",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 21,
        "reference": "editHasMany",
        "name": "editHasMany",
        "type": "Boolean",
        "scope": "field",
        "default_value": "false",
        "groupe": "forms",
        "description": "Indique que l'attribut HasMany doit être édité dans le formulaire Edit",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 22,
        "reference": "sortable",
        "name": "sortable",
        "type": "Boolean",
        "scope": "field",
        "default_value": "false",
        "groupe": "tables",
        "description": "Indique si la colonne est triable",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 23,
        "reference": "filterable",
        "name": "filterable",
        "type": "Boolean",
        "scope": "field",
        "default_value": "false",
        "groupe": "tables",
        "description": "Indique si des filtres peuvent être appliqués sur la colonne",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 24,
        "reference": "displayInTable",
        "name": "displayInTable",
        "type": "Boolean",
        "scope": "field",
        "default_value": "true",
        "groupe": "tables",
        "description": "Indique si l'attribut doit être affiché dans une table",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 25,
        "reference": "columnWidth",
        "name": "columnWidth",
        "type": "Integer",
        "scope": "field",
        "default_value": "",
        "groupe": "tables",
        "description": "Largeur de la colonne dans une table",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 26,
        "reference": "format",
        "name": "format",
        "type": "String",
        "scope": "field",
        "default_value": " date",
        "groupe": "tables",
        "description": "Formatage de l'attribut dans une table (monétaire",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 27,
        "reference": "icon",
        "name": "iconField",
        "type": "String",
        "scope": "field",
        "default_value": null,
        "groupe": "tables",
        "description": "Icône affichée dans une table pour cet attribut",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 28,
        "reference": "relationStats",
        "name": "relationStats",
        "type": "Json",
        "scope": "field",
        "default_value": "{                         \"modelName\": \"Filiere\",                         \"relation\": \"modules.competences\",                         \"icon\": \"fas fa-chart-pie\"                     }",
        "groupe": "filter",
        "description": "Statistiques ou informations sur les relations (modèle",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 29,
        "reference": "relationType",
        "name": "relationType",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "relations",
        "description": "Type de la relation (exemple : one-to-many)",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 30,
        "reference": "throughTable",
        "name": "throughTable",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "relations",
        "description": "Nom de la table pivot pour la relation",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 31,
        "reference": "targetTable",
        "name": "targetTable",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "relations",
        "description": "Nom de la table cible pour la relation",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 32,
        "reference": "targetModelName",
        "name": "targetModelName",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "relations",
        "description": "Nom du modèle cible pour la relation",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 33,
        "reference": "foreignKey",
        "name": "foreignKey",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "relations",
        "description": "Clé étrangère associée à la relation",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 34,
        "reference": "alignment",
        "name": "alignment",
        "type": "String",
        "scope": "field",
        "default_value": " centre",
        "groupe": "display",
        "description": "Alignement du contenu (gauche",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 35,
        "reference": "color",
        "name": "color",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "display",
        "description": "Couleur associée à cet attribut",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 36,
        "reference": "displayOrder",
        "name": "displayOrder",
        "type": "Integer",
        "scope": "field",
        "default_value": "",
        "groupe": "display",
        "description": "Ordre d'affichage des attributs",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 37,
        "reference": "group",
        "name": "group",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "display",
        "description": "Groupe auquel appartient cet attribut",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 38,
        "reference": "badge",
        "name": "badge",
        "type": "Boolean",
        "scope": "field",
        "default_value": "false",
        "groupe": "display",
        "description": "Indique si cet attribut doit être affiché sous forme de badge",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 39,
        "reference": "badgeStyle",
        "name": "badgeStyle",
        "type": "String",
        "scope": "field",
        "default_value": "",
        "groupe": "display",
        "description": "Style du badge associé à cet attribut",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 40,
        "reference": "imageThumbnail",
        "name": "imageThumbnail",
        "type": "Boolean",
        "scope": "field",
        "default_value": "false",
        "groupe": "display",
        "description": "Indique si l'attribut doit afficher une miniature d'image",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 41,
        "reference": "creationOrder",
        "name": "creationOrder",
        "type": "Integer",
        "scope": "model",
        "default_value": "0",
        "groupe": "model",
        "description": "Indique l'ordre de création de la table",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 42,
        "reference": "iconModel",
        "name": "iconModel",
        "type": "String",
        "scope": "model",
        "default_value": "fa-table",
        "groupe": "general",
        "description": "Icon de Model",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 43,
        "reference": "dynamicFieldVisibility",
        "name": "dynamicFieldVisibility",
        "type": "Json",
        "scope": "field",
        "default_value": "{   \"typeField\": \"type\",   \"fieldMappings\": [     {       \"type\": \"String\",       \"fieldId\": \"value_string\"     }   ] }",
        "groupe": "form",
        "description": "Le traitement DynamicFieldVisibility permet de gérer l'affichage dynamique des champs dans un formulaire en fonction de certaines conditions ou règles.",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 44,
        "reference": "ownedByUser",
        "name": "ownedByUser",
        "type": "Json",
        "scope": "model",
        "default_value": "[\r\n  {\r\n    \"role\": \"formateur\",\r\n    \"dataScope\": \"filter\",\r\n    \"userModelName\": \"Formateur\",\r\n    \"ownerRelationPath\": \"RealisationProjet.AffectationProjet.Projet.Formateur.user\"\r\n  },\r\n  {\r\n    \"role\": \"apprenant\",\r\n    \"dataScope\": \"filter\",\r\n    \"userModelName\": \"Apprenant\",\r\n    \"ownerRelationPath\": \"RealisationProjet.Apprenant.user\"\r\n  }\r\n]",
        "groupe": "general",
        "description": "Cette solution permet de gérer dynamiquement les permissions dans Laravel pour que seuls les utilisateurs propriétaires de certains objets puissent effectuer des actions spécifiques (par exemple, modifier, supprimer, ou afficher)",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 45,
        "reference": "computableFields",
        "name": "computableFields",
        "type": "Json",
        "scope": "model",
        "default_value": "[             {                 \"name\": \"Value\",                 \"label\": \"Value\",                 \"method\": \"getValue\",                 \"dispalyOrder\": 10             }         ]",
        "groupe": "model",
        "description": "Le traitement **ComputableField** permet d’obtenir une valeur calculée dynamiquement en fonction d’une méthode définie.",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 46,
        "reference": "displayInSideBar",
        "name": "displayInSideBar",
        "type": "Boolean",
        "scope": "model",
        "default_value": null,
        "groupe": "model",
        "description": "Le champ **DisplayInSideBar** est un indicateur booléen (`true` ou `false`) utilisé pour définir si un élément doit être affiché ou non dans la barre latérale (**SideBar**) d'une application.",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 47,
        "reference": "displayInForm",
        "name": "displayInForm",
        "type": "Boolean",
        "scope": "field",
        "default_value": null,
        "groupe": "form",
        "description": "Affichage de champs dans le formulaire",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 48,
        "reference": "dataCalcul",
        "name": "dataCalcul",
        "type": "Boolean",
        "scope": "field",
        "default_value": null,
        "groupe": "form",
        "description": "Indique que le champs va mettre à jour les données de formateur dans le server après sont changement",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 49,
        "reference": "editOnFullScreen",
        "name": "editOnFullScreen",
        "type": "Boolean",
        "scope": "model",
        "default_value": null,
        "groupe": "form",
        "description": "Edit le le formulaire en plein écran",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 50,
        "reference": "scopeDataByRole",
        "name": "scopeDataByRole",
        "type": "Json",
        "scope": "field",
        "default_value": "[   {     \"key\": \"scope.projet.formateur_id\",     \"role\": \"formateur\",     \"value\": \"formateur_id\"   } ]",
        "groupe": "form",
        "description": "<p>                Il permet de restreindre les relations d’un modèle aux entités qui lui sont explicitement assignées. Par exemple, il peut être utilisé pour filtrer uniquement les groupes, projets ou ressources affectés à un utilisateur spécifique.</p><p>Il peut être aussi utiliser pour scope data pour Model in Index méthode, il peut être utilisé avec type Model</p><p>\r\n            </p>",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 51,
        "reference": "inputFields",
        "name": "inputFields",
        "type": "Json",
        "scope": "model",
        "default_value": "[   {     \"name\": \"order\",     \"label\": \"Ordre\",     \"dispalyOrder\": 1   } ]",
        "groupe": "form",
        "description": "Détermine les champs à saisie seulement dans le formulaire",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 52,
        "reference": "isConfirmed",
        "name": "isConfirmed",
        "type": "Boolean",
        "scope": "field",
        "default_value": null,
        "groupe": "form",
        "description": "Il est utiliser pour le champs password, c'est une sort de validation laravel pour ajouter une champs de confirmation dans le formulaire",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 53,
        "reference": "entityActions",
        "name": "entityActions",
        "type": "Json",
        "scope": "model",
        "default_value": "[   {     \"icon\": \"fa-unlock-alt\",     \"title\": \"Initialiser le mot de passe\",     \"methode\": \"initPassword\",     \"actionType\": \"confirm\",     \"successMessage\": \"Le mot de passe a été modifier avec succès\"   } ]",
        "groupe": "tables",
        "description": "Détermine les actions à ajouter dans TableUI",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 54,
        "reference": "inputMdWidth",
        "name": "inputMdWidth",
        "type": "Integer",
        "scope": "field",
        "default_value": "12",
        "groupe": "form",
        "description": "Indique col-md value in row pour un champs dans le formulaire",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 55,
        "reference": "formStartGroup",
        "name": "formStartGroup",
        "type": "Json",
        "scope": "field",
        "default_value": "{\"label\":\"Groupe\"}",
        "groupe": "form",
        "description": "Indique le début d'un groupe des input : il contient title de type h4 et un séparateur hr",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 56,
        "reference": "scopeDataInEditContext",
        "name": "scopeDataInEditContext",
        "type": "Json",
        "scope": "field",
        "default_value": "[   {     \"key\": \"scope.competence.module.filiere_id\",     \"value\": \"filiere_id\",     \"modelName\": \"Projet\"   } ]",
        "groupe": "form",
        "description": "<p>                scope les données dans un select dans pour une relation ManyToOne et ManyToMany, dans le context Edit avec has many,&nbsp;</p><p>Il exist une autre meta : scopeDataRole, scopeDataByConnectedUser</p>",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 57,
        "reference": "editableByRoles",
        "name": "editableByRoles",
        "type": "Json",
        "scope": "field",
        "default_value": "{\"roles\":\"formateur,admin\"}",
        "groupe": "form",
        "description": "<p>Problème : autorisation d'édition des champs par rôle</p><p>Exemple : Apprenant a l'autorisation de modifier l'état de réalisation de projet mais n'a pas le droit de modifier l'apprenant et l'affectation de projet.</p>",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 58,
        "reference": "dynamicDropdown",
        "name": "dynamicDropdown",
        "type": "Json",
        "scope": "field",
        "default_value": "{      \"targetDynamicDropdown\" : \"competence_id\",      \"targetDynamicDropdownApiUrl\" : \"route('competences.getData')\",      \"targetDynamicDropdownFilter\" : \"module.filiere_id\" }",
        "groupe": "form",
        "description": "Il perme de filter un select par un autre select\r\n            <br>voir l'exemple dans RealisationTacheServide : filter les tâches selon Affectation de projet",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 59,
        "reference": "isRichText",
        "name": "isRichText",
        "type": "Boolean",
        "scope": "field",
        "default_value": "1",
        "groupe": "form",
        "description": "indique est ce que le champs de Text un richeText",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 60,
        "reference": "relationFilter",
        "name": "relationFilter",
        "type": "Json",
        "scope": "field",
        "default_value": "[\r\n  {\r\n    \"path\": \"Widget.Section_widget_id\",\r\n    \"iModelName\": \"SectionWidget\",\r\n    \"relationType\": \"ManyToOne\"\r\n  }\r\n]",
        "groupe": "filter",
        "description": "<p>Il permet de créer un fichier dynamique en se basant sur une relation(path)</p>",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 61,
        "reference": "nature",
        "name": "nature",
        "type": "Json",
        "scope": "field",
        "default_value": "{\"nature\":\"couleur\"}",
        "groupe": "general",
        "description": "<p>Détermine la nature de champs. exemple : icone, couleur, image,lien</p>",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 62,
        "reference": "selectOne",
        "name": "selectOne",
        "type": "Json",
        "scope": "field",
        "default_value": "{   \"type\": \"Entity\",   \"iModelName\": \"Filiere\",   \"functionName\": \"all\" }",
        "groupe": "form",
        "description": "<div style=\"color: rgb(0, 0, 0); font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 19px; white-space: pre;\"><div>La metadata <span style=\"color: #800000;\">`SelectOne`</span> permet d’ajouter un champ de type <span style=\"color: #000080;font-weight: bold;\">sélection unique (menu déroulant)</span></div><div>basé sur une <span style=\"color: #000080;font-weight: bold;\">source de données externe</span> appelée <span style=\"color: #800000;\">`dataSource`</span>.</div><br></div>",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 63,
        "reference": "viewType",
        "name": "viewType",
        "type": "Json",
        "scope": "model",
        "default_value": "{   \"types\": [     {       \"type\": \"table\",       \"label\": \"Vue Tableau\",       \"icon\": \"fas fa-table\"     },     {       \"type\": \"widgets\",       \"label\": \"Vue Widgets\",       \"icon\": \"fas fa-th-large\"     }   ],   \"default\": \"widgets\" }",
        "groupe": "general",
        "description": "<div style=\"color: rgb(0, 0, 0); font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 19px; white-space: pre;\"><div>Cette métadonnée permet de configurer les types de vues disponibles pour la <span style=\"color: #000080;font-weight: bold;\">**page index**</span> d’un modèle Laravel généré par Gapp.</div><br><div>Par défaut, la vue utilisée est <span style=\"color: #800000;\">`table`</span>.</div></div>",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 64,
        "reference": "persistInLocalStorageOnCreate",
        "name": "persistInLocalStorageOnCreate",
        "type": "Boolean",
        "scope": "field",
        "default_value": null,
        "groupe": "form",
        "description": "",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 65,
        "reference": "linksAction",
        "name": "linksAction",
        "type": "Json",
        "scope": "model",
        "default_value": "[\r\n  {\r\n    \"icon\": \"fas fa-file-alt\",\r\n    \"class\": \"btn btn-default btn-sm context-state actionEntity showIndex\",\r\n    \"ordre\": 1,\r\n    \"route\": \"livrablesRealisations.index\",\r\n    \"params\": {\r\n      \"showIndex\": true,\r\n      \"contextKey\":\"livrablesRealisation-index\",\r\n      \"scope.livrablesRealisation.realisation_projet_id\": \"$realisationTache->realisation_projet_id\",\r\n      \"scope.livrable.projet_id\": \"$realisationTache->realisationProjet->affectationProjet->projet_id\"\r\n    },\r\n    \"tooltip\": \"Livrables\",\r\n    \"permission\": \"index-livrablesRealisation\"\r\n  }\r\n]",
        "groupe": "table",
        "description": "<div style=\"color: rgb(0, 0, 0); font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 19px; white-space: pre;\"><div>Permet d’ajouter un bouton ou une icône dans chaque ligne de la <span style=\"color: #800000;\">`TableUI`</span>, afin de rediriger </div><div>l'utilisateur vers une autre page (souvent un index ou un détail) avec des paramètres dynamiques </div><div>liés à l'entité de la ligne. Cela facilite la navigation vers des vues filtrées ou contextuelles </div><div>(ex. : tâches d’un apprenant, livrables d’un projet).</div><br></div>",
        "created_at": null,
        "updated_at": null
    },
    {
        "id": 66,
        "reference": "sortByPath",
        "name": "sortByPath",
        "type": "Json",
        "scope": "field",
        "default_value": "{\r\n  \"path\": \"etatRealisationTache.workflowTache.code\"\r\n}",
        "groupe": "table",
        "description": "<p><span style=\"color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;;\">Permet de spécifier dynamiquement le chemin du champ à utiliser pour trier l’entité dans les listes ou tables. Ce chemin peut naviguer dans des relations Laravel (</span><code style=\"font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, monospace; color: rgb(36, 41, 46); background-color: rgba(27, 31, 35, 0.05); padding: 0.2em 0.4em; border-radius: 3px; font-size: 13.6px; line-height: 1.357em; margin: 0px;\">ManyToOne</code><span style=\"color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;;\">) pour atteindre une propriété spécifique de l’objet cible.</span></p>",
        "created_at": null,
        "updated_at": null
    }
]